{"version":3,"file":"static/js/422.412e1b39.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movie-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nexport const GoBackLink = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  font-weight: 600;\n  text-decoration: none;\n  color:#736A3D;\n  border: 1px solid #3C401D;\n  border-radius: 7px;\n  margin-bottom: 10px;\n  &:hover{\n    background-color: #736A3D;\n    color:#3C401D;\n    svg {transform: scale(1.5)}\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color:#3C401D;\n  display: inline-block;\n  padding: 15px 10px;\n  font-weight: 700;\n  text-decoration: none;\n  &:hover, \n  &.active{color:#736A3D;}\n`;\n\nexport const WrapperBlock = styled.div`\n  display: flex;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 250px;\n`;\n\nexport const DetailsWrap = styled.div`\n  margin-left: 20px;\n  color: #3C401D;\n`;\n\nexport const Title2 = styled.h2`\n  margin-top: 15px;\n`;\nexport const Title3 = styled.h3`\n  margin-top: 15px;\n`;\nexport const Title4 = styled.h4`\n  margin-top: 15px;\n`;\n\nexport const Text = styled.p`\n  margin-top: 15px;\n`;\n\nexport const MoreInfoLink = styled.div`\n  border: 1px solid #3C401D;\n  border-left: none;\n  border-right: none;\n  margin: 15px auto;\n  color: #3C401D;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { fetchMovieById } from \"services/movie-api\";\nimport { WrapperBlock, DetailsWrap, Poster, Title2, Title3, Title4, Text, StyledLink, GoBackLink, MoreInfoLink } from \"./MovieDetails.styled\";\nimport { TiArrowBack } from 'react-icons/ti';\nimport { toast } from \"react-toastify\";\n\nexport default function Movies() {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackPath = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieById(movieId)\n      .then(movie => {\n        setMovieDetails(movie);\n      })\n      .catch((e) => { toast.error(e.status_message); });\n  }, [movieId])\n  \n  const { poster_path, title, vote_average, overview, } = movieDetails;\n  const genres = () => movieDetails.genres.map(item => item.name).join(' ');\n\n\n  return (<>\n    <GoBackLink to={goBackPath}><TiArrowBack /> Go back</GoBackLink>\n\n    {Object.keys(movieDetails).length\n      ? (<>\n      <WrapperBlock>\n          <Poster src={`https://image.tmdb.org/t/p/original/${poster_path}`} alt=\"\" />\n          <DetailsWrap>\n            <Title2>{title}</Title2>\n            <Text>User score: {vote_average}</Text>\n            <Title3>Overview</Title3>\n            <Text>{overview}</Text>\n            <Title4>Genres</Title4>\n            <Text>{genres()}</Text>\n          </DetailsWrap>\n      </WrapperBlock>\n\n      <MoreInfoLink>\n        <Title4>Additional information</Title4>\n        <StyledLink to=\"cast\" state={{ from: location }}>Cast</StyledLink>\n        <StyledLink to=\"reviews\" state={{ from: location }}>Reviews</StyledLink>\n      </MoreInfoLink>\n\n      <Outlet/>\n      </>)\n      : <Title2>Nothing found</Title2>\n      }\n  </>)\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9bb5ab2e288d2a75e3a9828e96791982';\n\nfunction setUrlParams(url, arr) {\n  for (let [name, value] of arr) {\n    url.searchParams.set(name, value);\n  }\n}\n\nasync function fetchFromTMDB(additionalURL, urlParams = []) {\n  const url = new URL(BASE_URL + additionalURL);\n\n  urlParams.push(['api_key', KEY]);\n  setUrlParams(url, urlParams);\n\n  const response = await fetch(url);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  return Promise.reject(response.json());\n}\n\nexport async function fetchTrendingMovies() {\n  try {\n    return await fetchFromTMDB('trending/movie/day');\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchMoviesQuery(query, page = 1) {\n  const queryParam = [\n    ['query', query],\n    ['page', page],\n  ];\n\n  try {\n    return await fetchFromTMDB('search/movie', queryParam);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchMovieById(id) {\n  try {\n    return await fetchFromTMDB(`movie/${id}`);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchCreditsById(id) {\n  try {\n    return await fetchFromTMDB(`movie/${id}/credits`);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchReviewsById(id) {\n  try {\n    return await fetchFromTMDB(`movie/${id}/reviews`);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n"],"names":["GoBackLink","styled","Link","_templateObject","_taggedTemplateLiteral","StyledLink","NavLink","_templateObject2","WrapperBlock","div","_templateObject3","Poster","img","_templateObject4","DetailsWrap","_templateObject5","Title2","h2","_templateObject6","Title3","h3","_templateObject7","Title4","h4","_templateObject8","Text","p","_templateObject9","MoreInfoLink","_templateObject10","Movies","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","goBackPath","state","from","useEffect","fetchMovieById","then","movie","catch","e","toast","error","status_message","poster_path","title","vote_average","overview","_jsxs","_Fragment","children","to","_jsx","TiArrowBack","Object","keys","length","src","concat","alt","genres","map","item","name","join","Outlet","BASE_URL","KEY","setUrlParams","url","arr","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","value","searchParams","set","err","f","fetchFromTMDB","_x","_fetchFromTMDB","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","additionalURL","urlParams","response","_args","wrap","_context","prev","next","undefined","URL","push","fetch","sent","ok","abrupt","json","Promise","reject","stop","fetchTrendingMovies","_fetchTrendingMovies","_callee2","_context2","t0","t1","t2","call","fetchMoviesQuery","_x2","_fetchMoviesQuery","_callee3","query","queryParam","_args3","_context3","_x3","_fetchMovieById","_callee4","id","_context4","fetchCreditsById","_x4","_fetchCreditsById","_callee5","_context5","fetchReviewsById","_x5","_fetchReviewsById","_callee6","_context6"],"sourceRoot":""}