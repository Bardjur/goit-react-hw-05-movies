{"version":3,"file":"static/js/952.ffc29343.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/movie-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px 0 20px;\n`;\n\nexport const ListItem = styled.li`\n  background-color: #A8B5BF;\n  display: block;\n  border-radius: 5px;\n  &:hover {\n    background-color:#736A3D;\n    a{\n      color:#A8B5BF;\n    }\n  }\n  &:not(:last-child){\n    margin-bottom: 5px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  padding: 10px;\n  font-weight: 600;\n  text-decoration: none;\n  color:#736A3D;\n`;","import { List, ListItem, StyledLink } from \"./MoviesList.styled\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nexport default function MoviesList({ movies, fromPages}) {\n  const location = useLocation();\n  const StartPage = fromPages === \"movies\" ? \"\" : \"movies/\";\n\n  return (\n    <List>\n      {movies.map(({id, title}, idx) => (\n        <ListItem key={id}>\n          <StyledLink to={`${StartPage + id.toString()}`} state={{ from: location }}>\n            {`${idx + 1}. ${title}`}\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  fromPages: PropTypes.string,\n}\n","import styled from '@emotion/styled'\n\nexport const Container = styled.header`\n  margin-bottom: 30px;\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 29px;\n  border: 0;\n  opacity: 1;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #687E8C;\n  color:#A8B5BF;\n\n  &:hover {\n    color: #2C3540;\n    opacity: 0.6;\n  }\n`;\n\nexport const BtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  color:#3C401D;\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  box-shadow: inset 0px 0px 5px 0px rgba(208,221,231,1);\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import React, {useState} from \"react\";\nimport { toast } from 'react-toastify';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { Form, Button, BtnLabel, Input } from './SearchBar.styled';\nimport PropTypes from \"prop-types\";\n\nexport default function SearchBar({ onSubmit, input }) {\n  const [query, setQuery] = useState(input);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const handleQuery = query.trim();\n\n    if (!handleQuery) {\n      toast.error('please enter a request',{theme: \"colored\"});\n      return\n    }\n    onSubmit(handleQuery);\n  }\n\n  const handleChange = e => setQuery(e.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        autocomplete=\"off\"\n        autoFocus\n        placeholder=\"Search video\"\n        value = {query}\n        onChange={handleChange}\n      />\n\n      <Button type=\"submit\">\n        <BtnLabel>Search</BtnLabel>\n        <BiSearchAlt/>\n      </Button>\n    </Form>\n  )\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  input:PropTypes.string.isRequired,\n}\n","import MoviesList from \"components/MoviesList\";\nimport { fetchMoviesQuery } from \"services/movie-api\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchBar from \"components/SearchBar\";\nimport { toast } from \"react-toastify\";\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!query.get(\"query\")) {\n      return\n    }\n    setIsLoading(true)\n    fetchMoviesQuery(query.get(\"query\"))\n      .then((movies) => { setMovies(movies.results) })\n      .catch((e) => { toast.error(e.status_message); })\n      .finally(() => {setIsLoading(false)});\n  }, [query])\n\n  useEffect(() => {\n\n  },[])\n  \n  const changeQuery = (query) => {\n    setQuery({query});\n  }\n  \n  return (\n    <>\n      <SearchBar onSubmit={changeQuery} input={query.get(\"query\") ?? ''} />\n      {isLoading && <MagnifyingGlass glassColor='#c0efff' color='#3C401D'/>}\n      {movies.length !==0 && <MoviesList movies={movies} fromPages=\"movies\" />}\n      {query.size !==0 && !movies.length && !isLoading && <h2>There is nothing for this request</h2>}\n    </>\n  )\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '9bb5ab2e288d2a75e3a9828e96791982';\n\nfunction setUrlParams(url, arr) {\n  for (let [name, value] of arr) {\n    url.searchParams.set(name, value);\n  }\n}\n\nasync function fetchFromTMDB(additionalURL, urlParams = []) {\n  const url = new URL(BASE_URL + additionalURL);\n\n  urlParams.push(['api_key', KEY]);\n  setUrlParams(url, urlParams);\n\n  const response = await fetch(url);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  return Promise.reject(response.json());\n}\n\nexport async function fetchTrendingMovies() {\n  try {\n    return await fetchFromTMDB('trending/movie/day');\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchMoviesQuery(query, page = 1) {\n  const queryParam = [\n    ['query', query],\n    ['page', page],\n  ];\n\n  try {\n    return await fetchFromTMDB('search/movie', queryParam);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchMovieById(id) {\n  try {\n    return await fetchFromTMDB(`movie/${id}`);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchCreditsById(id) {\n  try {\n    return await fetchFromTMDB(`movie/${id}/credits`);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n\nexport async function fetchReviewsById(id) {\n  try {\n    return await fetchFromTMDB(`movie/${id}/reviews`);\n  } catch (error) {\n    return Promise.reject(await error);\n  }\n}\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","ListItem","li","_templateObject2","StyledLink","Link","_templateObject3","MoviesList","_ref","movies","fromPages","location","useLocation","StartPage","_jsx","children","map","_ref2","idx","id","title","to","concat","toString","state","from","Form","header","form","Button","button","BtnLabel","span","_templateObject4","Input","input","_templateObject5","SearchBar","onSubmit","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","e","preventDefault","handleQuery","trim","toast","error","theme","type","autocomplete","autoFocus","placeholder","value","onChange","target","BiSearchAlt","Movies","_query$get","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","_useState3","_useState4","isLoading","setIsLoading","useEffect","get","fetchMoviesQuery","then","results","catch","status_message","finally","_Fragment","MagnifyingGlass","glassColor","color","length","size","BASE_URL","KEY","setUrlParams","url","arr","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","name","searchParams","set","err","f","fetchFromTMDB","_x","_fetchFromTMDB","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","additionalURL","urlParams","response","_args","wrap","_context","prev","next","undefined","URL","push","fetch","sent","ok","abrupt","json","Promise","reject","stop","fetchTrendingMovies","_fetchTrendingMovies","_callee2","_context2","t0","t1","t2","call","_x2","_fetchMoviesQuery","_callee3","queryParam","_args3","_context3","fetchMovieById","_x3","_fetchMovieById","_callee4","_context4","fetchCreditsById","_x4","_fetchCreditsById","_callee5","_context5","fetchReviewsById","_x5","_fetchReviewsById","_callee6","_context6"],"sourceRoot":""}